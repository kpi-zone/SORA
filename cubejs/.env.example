# ============================================================================
# ‚úÖ PRODUCTION ENVIRONMENT CONFIGURATION ‚Äî Cube.js
#
# This file defines environment variables for running Cube.js in a secure
# production environment. All secrets must be stored securely, and this file
# should be excluded from version control (e.g., via `.gitignore`).
#
# ‚ùó All secrets must be securely managed (e.g., via Vault or secrets manager),
# and this file must be excluded from version control (.gitignore, etc.).
#
# ‚û§ Copy this file and rename it to `.env` before running your project:
#    cp .env.example .env
# ============================================================================


# ------------------------------
# üîÅ NGINX Virtual Host Configuration
# ------------------------------

# Public domain routed by your reverse proxy (e.g., nginx-proxy, Traefik).
VIRTUAL_HOST=your.cubejs.domain

# Internal container port on which Cube.js listens.
VIRTUAL_PORT=4000


# ------------------------------
# üîê Let's Encrypt ‚Äî SSL Settings
# ------------------------------

# Fully qualified domain name used to generate an SSL certificate.
LETSENCRYPT_HOST=your.cubejs.domain

# Email address for Let's Encrypt registration and certificate renewal alerts.
LETSENCRYPT_EMAIL=you@example.com


# ------------------------------
# ‚öôÔ∏è Cube.js Runtime Settings
# ------------------------------

# Public-facing base URL of the Cube.js API.
CUBEJS_API_URL=https://your.cubejs.domain

# Disables development-only features like Playground UI and hot reload.
# ‚ö†Ô∏è Must be set to `false` in production.
CUBEJS_DEV_MODE=false

# Type of source database used by Cube.js (e.g., postgres, mysql, bigquery).
CUBEJS_DB_TYPE=postgres


# ------------------------------
# üõ¢Ô∏è Default Data Source Configuration (dataSource: 'default')
# ------------------------------

# Host of your main analytics database.
CUBEJS_DB_HOST=your_db_host

# Port the database is accessible on (default for PostgreSQL is 5432).
CUBEJS_DB_PORT=5432

# Name of the database used by Cube.js.
CUBEJS_DB_NAME=your_analytics_db

# Username used to connect to the source database.
CUBEJS_DB_USER=your_db_user

# Password for the above database user.
# üîê Keep secure and avoid exposing in logs or client-facing code.
CUBEJS_DB_PASS=your_secure_db_password


# ------------------------------
# üß© Additional Data Sources (Optional)
# dataSource: '<NAME>'
# ------------------------------

# Example for a second data source (e.g., a CRM system using MySQL).
CUBEJS_DATASOURCES__crm__DB_TYPE=mysql
CUBEJS_DATASOURCES__crm__DB_HOST=crm-db-host
CUBEJS_DATASOURCES__crm__DB_NAME=crm
CUBEJS_DATASOURCES__crm__DB_USER=crm_user
CUBEJS_DATASOURCES__crm__DB_PASS=crm_password


# ------------------------------
# üöÄ Cube.js API Server Settings
# ------------------------------

# Bind host for the Cube.js API server.
# 0.0.0.0 allows access from outside the container (typical in Docker).
CUBEJS_API_HOST=0.0.0.0


# ------------------------------
# üìÅ Data Schema Configuration
# ------------------------------

# Filesystem path (inside container) to Cube.js data schema files.
CUBEJS_SCHEMA_PATH=/cube/conf/model


# ------------------------------
# üß© SQL-over-Postgres (Optional BI Integration)
# ------------------------------

# Port exposing Cube.js as a PostgreSQL-compatible read-only SQL endpoint.
# Useful for BI tools like Superset or Metabase.
CUBEJS_PG_SQL_PORT=15432

# Username for connecting to the SQL API (used by external BI clients).
CUBEJS_SQL_USER=cubejs

# Password for the SQL API user above.
CUBEJS_SQL_PASSWORD=your_sql_api_password


# ------------------------------
# üîê Security & Secrets
# ------------------------------

# Shared API secret for authenticating internal service requests and signing JWTs.
# ‚û§ Must match `MCP_API_SECRET` and be kept strictly private.
CUBEJS_API_SECRET=your_shared_api_secret


# ------------------------------
# ‚ö° Cache and Queue Configuration
# ------------------------------

# Driver used for caching and queuing (e.g., redis, cubestore).
CUBEJS_CACHE_AND_QUEUE_DRIVER=cubestore

# Hostname of CubeStore (used as backend for pre-aggregations and caching).
CUBEJS_CUBESTORE_HOST=cubestore

# Port on which CubeStore is accessible.
CUBEJS_CUBESTORE_PORT=3030
