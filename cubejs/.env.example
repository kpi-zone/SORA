# ========================================================================
# ðŸ§ª Cube.js Environment Variables Template
#
# This file contains example configuration settings for Cube.js.
# âž¤ Copy this file and rename it to `.env` before starting your project.
# âž¤ Update the values to match your local or development setup.
#
# ========================================================================

# ------------------------------
# NGINX Virtual Host Configuration
# ------------------------------

# The virtual hostname for accessing Cube.js locally (via reverse proxy)
VIRTUAL_HOST=cubejs.cognivise.io

# Internal port used by Cube.js (exposed by the container)
VIRTUAL_PORT=4000   

# ------------------------------
# Let's Encrypt â€“ SSL Settings (Production Only)
# ------------------------------

# The fully qualified domain name (FQDN) for your production deployment.
# This will be used by nginx-proxy and the companion container to issue an SSL certificate.
LETSENCRYPT_HOST=cubejs.example.domain

# The email address used for Let's Encrypt registration and renewal notifications.
# âž¤ Required for generating and managing SSL certificates.
LETSENCRYPT_EMAIL=mail@example.domain

# ------------------------------
# CUBE.JS Environment
# ------------------------------

# ---- CUBEJS ----

#  Specifies the base URL of the Cube.js backend API
CUBEJS_API_URL=https://path_to_your_domain

# Enable development mode (auto-restart, playground UI, etc.)
CUBEJS_DEV_MODE=true

# Type of database Cube.js will connect to (e.g., postgres, mysql, clickhouse)
CUBEJS_DB_TYPE=postgres

# Database connection details (for your analytics database) - dataSource: 'default'
CUBEJS_DB_HOST=localhost              # Host of your Postgres DB
CUBEJS_DB_PORT=5432                   # Default port for Postgres
CUBEJS_DB_NAME=cubejs_demo            # Example database name
CUBEJS_DB_USER=cubejs_user            # Example DB username
CUBEJS_DB_PASS=cubejs_password        # Example DB password

# Database connection details for further datasources(CUBEJS_DATASOURCES__<NAME>__) - dataSource: '<NAME>'
CUBEJS_DATASOURCES__<NAME>__DB_TYPE=mysql
CUBEJS_DATASOURCES__<NAME>__DB_HOST=crm-db-host
CUBEJS_DATASOURCES__<NAME>__DB_NAME=crm
CUBEJS_DATASOURCES__<NAME>__DB_USER=crm_user
CUBEJS_DATASOURCES__<NAME>__DB_PASS=crm_pass

# ---- SQL API ----

# Optional: Enable Cube.js SQL API on this port
CUBEJS_PG_SQL_PORT=15432              # Port for SQL-over-Postgres API (for BI tools)

# Credentials for Cube.js SQL API (used by clients like Superset, Tableau, etc.)
CUBEJS_SQL_USER=sql_user              # SQL API username
CUBEJS_SQL_PASSWORD=sql_password      # SQL API password

# ---- API Configuration ----

# Host to bind Cube.js API server to (0.0.0.0 = all interfaces)
CUBEJS_API_HOST=0.0.0.0

# Secret key used to sign and validate JWT tokens for API auth
CUBEJS_API_SECRET=dev-secret-abc1234567890xyzXYZ

# ---- Other Settings ----

# Path where Cube.js data models (schema files) are stored
CUBEJS_SCHEMA_PATH=/cube/conf/model